# spec.yaml  – Starter v0.1

name: GameBoy
version: 0.1

cpu:
  description: "8-bit Sharp LR35902 core (Intel 8080 + Z80 hybrid)"
  registers:
    A:   { bits: 8,  role: "Accumulator" }
    F:   { bits: 8,  role: "Flag register (Z N H C)" }
    PC:  { bits: 16, role: "Program Counter" }
  alu_ops:        # ✨ Mentee A will grow this list
    - { mnemonic: ADD_A_n8, operands: ["imm8"], effect: "A ← A + imm8" }
    - { mnemonic: SUB_A_n8, operands: ["imm8"], effect: "A ← A – imm8" }
    - { mnemonic: AND_A_n8, operands: ["imm8"], effect: "A ← A & imm8" }
    - { mnemonic: OR_A_n8,  operands: ["imm8"], effect: "A ← A | imm8" }
    - { mnemonic: XOR_A_n8, operands: ["imm8"], effect: "A ← A ^ imm8" }
    - { mnemonic: INC_A,    operands: [],       effect: "A ← A + 1" }
memory:
  description: "Address map stub – grow section by section"
  regions:       # ✨ Mentee B will flesh this out
    - { name: WRAM, base: 0xC000, size: 0x2000, readable: true, writable: true }

ppu:
  description: "LCD controller registers only for now"
  registers:     # ✨ Mentee C will expand here
    LY:   { addr: 0xFF44, bits: 8, role: "Current scanline" }
    LCDC: { addr: 0xFF40, bits: 8, role: "LCD control" }
    STAT: { addr: 0xFF41, bits: 8, role: "LCD status flags & mode" }
    SCY:  { addr: 0xFF42, bits: 8, role: "BG viewport Y scroll" }
    SCX:  { addr: 0xFF43, bits: 8, role: "BG viewport X scroll" }
    WY:   { addr: 0xFF4A, bits: 8, role: "Window Y position" }
    WX:   { addr: 0xFF4B, bits: 8, role: "Window X position plus 7" }
